# --- SDE-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
#
# Filename: lib/sde-package.in
# Copyright (C) 2006 - 2009 The OpenSDE Project
#
# More information can be found in the files COPYING and README.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- SDE-COPYRIGHT-NOTE-END ---

package_autodetect() {
	pwd -P | sed -n -e "s,^$SDEROOT/package/[^/]*/\([^/]*\)\(/.*\)\?$,\1,p"
}

package_autodetect_repo() {
	pwd -P | sed -n -e "s,^$SDEROOT/package/\([^/]*\)\(/.*\)\?,\1,p"
}

package_exists() {
	local x=$(ls -1 "$SDEROOT/package"/*/"$1/$1.desc" 2> /dev/null)

	[ -s "$x" ]
}

package_confdir() {
	ls -1d "$SDEROOT/package"/*/"$1" 2> /dev/null | head -n 1
}

package_parse() {
	local ref= list=

	try_list() {
		eval "cd '$SDEROOT/package' && ls -1d $1/ 2> /dev/null"	|
			sed -e "s,^,$SDEROOT/package/,"
	}

	for ref; do
		# sanitise
		ref=$(echo "$ref" | tr 'A-Z.; ' 'a-z___')
		if [ -d "$ref" ]; then
			list="$ref"
		elif expr "$ref" : '.*/' > /dev/null; then
			if [ -e "$ref" ]; then
				list="${ref%/*}"
			else
				list=$(try_list "$ref")
			fi
		else
			list=$(try_list "*/$ref")
		fi

		echo "$list" | while read dir; do
			(cd "$dir" && pwd -P)
		done | sed -n -e "s,^$SDEROOT/package/\([^/]*\)/\([^/]*\).*,\1/\2,p"
	done
}

# package_desc <pkg>
#
package_desc() {
	ls -1d "$SDEROOT/package"/*/"$1/$1.desc" 2> /dev/null | head -n 1
}

# package_tag <tag>
#
package_tag() {
	local tag=$(echo "$1" | tr 'a-z' 'A-Z')

	grep -e "^\(\[.*\)\?\[$tag\]" "$SDEROOT/etc/desc_format" |
		sed -e 's, *(\*) *$,,' -e 's,[\t ]\+, ,g' | tr -d '[]'
}

# package_desc_extract <descfile> <tag>
#
package_desc_extract() {
	local pattern=$(package_tag "$2" | sed -e '/ / {s/ \+/\\|/g;s/^/\\(/;s/$/\\)/;}')

	sed -n -e "s/^\[$pattern\][ \t]*//p;" "$1"
}
