# --- SDE-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
#
# Filename: architecture/arm/config.in
# Copyright (C) 2012 The OpenSDE Project
# Copyright (C) 2004 - 2006 The T2 SDE Project
# Copyright (C) 1998 - 2003 Clifford Wolf
#
# More information can be found in the files COPYING and README.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- SDE-COPYRIGHT-NOTE-END ---
#Description: ARM (Advanced RISC Machines)

choice SDECFG_ARM_OPT generic   \
	generic	       "No CPU optimisation selected"  \
	arm2           "arm2 CPU" \
	arm250         "arm250 CPU" \
	arm3           "arm3 CPU" \
	arm6           "arm6 CPU" \
	arm60          "arm60 CPU" \
	arm600         "arm600 CPU" \
	arm610         "arm610 CPU" \
	arm620         "arm620 CPU" \
	arm7           "arm7 CPU" \
	arm7m          "arm7m CPU" \
	arm7d          "arm7d CPU" \
	arm7dm         "arm7dm CPU" \
	arm7di         "arm7di CPU" \
	arm7dmi        "arm7dmi CPU" \
	arm70          "arm70 CPU" \
	arm700         "arm700 CPU" \
	arm700i        "arm700i CPU" \
	arm710         "arm710 CPU" \
	arm710t        "arm710t CPU" \
	arm710c        "arm710c CPU" \
	arm7100        "arm7100 CPU" \
	arm7500        "arm7500 CPU" \
	arm7500fe      "arm7500fe CPU" \
	arm7tdmi       "arm7tdmi CPU" \
	arm8           "arm8 CPU" \
	strongarm      "strongarm CPU" \
	strongarm110   "strongarm110 CPU" \
	strongarm1100  "strongarm1100 CPU" \
	arm8           "arm8 CPU" \
	arm810         "arm810 CPU" \
	arm9           "arm9 CPU" \
	arm9e          "arm9e CPU" \
	arm920         "arm920 CPU" \
	arm920t        "arm920t CPU" \
	arm940t        "arm940t CPU" \
	arm9tdmi       "arm9tdmi CPU" \
	arm10tdmi      "arm10tdmi CPU" \
	arm1020t       "arm1020t CPU" \
	xscale         "xscale CPU"

if [ $SDECFG_ARM_OPT == generic ] ; then
	choice SDECFG_ARM_ABI aapcs-linux \
		aapcs		"EABI with variable size enums" \
		aapcs-linux	"EABI with standard Linux 32 bit (int) enums" \
		apcs-gnu	"OABI (old ABI)" \
		atpcs		"Thumb ABI" \
		iwmmxt		"Intel XScale MMX extensions"

	choice SDECFG_ARM_ENDIANESS little-endian \
		little-endian	"little-endian" \
		big-endian	"big-endian"

	choice SDECFG_ARM_ARCH armv5 \
		armv2		"ARMv2" \
		armv2a		"ARMv2a" \
		armv3		"ARMv3" \
		armv3m		"ARMv3m" \
		armv4		"ARMv4" \
		armv4t		"ARMv4t" \
		armv5		"ARMv5" \
		armv5t		"ARMv5t" \
		armv5e		"ARMv5e" \
		armv5te		"ARMv5te" \
		armv6		"ARMv6" \
		armv6j		"ARMv6j" \
		armv6t2		"ARMv6t2" \
		armv6z		"ARMv6z" \
		armv6zk		"ARMv6zk" \
		armv6-m		"ARMv6-m" \
		armv7		"ARMv7" \
		armv7-a		"ARMv7-a" \
		armv7-r		"ARMv7-r" \
		armv7-m		"ARMv7-m" \
		iwmmxt		"IWMMXT" \
		iwmmxt2		"IWMMXT2" \
		ep9312		"EP9312"

	choice SDECFG_ARM_MODE arm \
		arm		"ARM mode" \
		thumb		"Thumb mode"

	choice SDECFG_ARM_FLOAT_ABI soft \
		soft		"soft-float calling conventions" \
		softfp		"hardware floating-point instructions using soft-float calling conventions" \
		hard		"hardware floating-point instructions using FPU-specific calling conventions"

	if [ $SDECFG_ARM_FLOAT_ABI == hard ]; then
		choice SDECFG_ARM_FPU neon \
			fpa		"fpa" \
			fpe2		"fpe2" \
			fpe3		"fpe3" \
			fpv4-sp-d16	"fpv4-sp-d16" \
			neon		"neon" \
			neon-fp16	"neon-fp16" \
			neon-vfpv4	"neon-vfpv4" \
			maverick	"maverick" \
			vfp		"vfp" \
			vfpv3		"vfpv3" \
			vfpv3-fp16	"vfpv3-fp16" \
			vfpv3-d16	"vfpv3-d16" \
			vfpv3-d16-fp16	"vfpv3-d16-fp16" \
			vfpv3xd		"vfpv3xd" \
			vfpv3xd-fp16	"vfpv3xd-fp16" \
			vfpv4		"vfpv4" \
			vfpv4-d16	"vfpv4-d16"
	fi
fi

bool 'Generate code using the 16bit thumb instruction set' SDECFG_ARM_THUMB 0

if [ $SDECFG_ARM_OPT != generic ] ; then
	SDECFG_ID="$SDECFG_ID-$SDECFG_ARM_OPT"
fi

