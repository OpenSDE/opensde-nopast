# --- SDE-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
#
# Filename: architecture/arm/config.in
# Copyright (C) 2012 - 2013 The OpenSDE Project
# Copyright (C) 2004 - 2006 The T2 SDE Project
# Copyright (C) 1998 - 2003 Clifford Wolf
#
# More information can be found in the files COPYING and README.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- SDE-COPYRIGHT-NOTE-END ---
#Description: ARM (Advanced RISC Machines)

choice SDECFG_ARM_OPT generic   \
	generic		"No CPU optimisation selected" \
	arm2		"arm2" \
	arm3		"arm3" \
	arm6		"arm6" \
	arm7		"arm7" \
	arm7d		"arm7d" \
	arm7di		"arm7di" \
	arm7dm		"arm7dm" \
	arm7dmi		"arm7dmi" \
	arm7m		"arm7m" \
	arm7tdmi	"arm7tdmi" \
	arm7tdmi-s	"arm7tdmi-s" \
	arm8		"arm8" \
	arm9		"arm9" \
	arm9e		"arm9e" \
	arm9tdmi	"arm9tdmi" \
	arm10e		"arm10e" \
	arm10tdmi	"arm10tdmi" \
	arm60		"arm60" \
	arm70		"arm70" \
	arm250		"arm250" \
	arm600		"arm600" \
	arm610		"arm610" \
	arm620		"arm620" \
	arm700		"arm700" \
	arm700i		"arm700i" \
	arm710		"arm710" \
	arm710c		"arm710c" \
	arm710t		"arm710t" \
	arm720		"arm720" \
	arm720t		"arm720t" \
	arm740t		"arm740t" \
	arm810		"arm810" \
	arm920		"arm920" \
	arm920t		"arm920t" \
	arm922t		"arm922t" \
	arm926ej-s	"arm926ej-s" \
	arm940t		"arm940t" \
	arm946e-s	"arm946e-s" \
	arm966e-s	"arm966e-s" \
	arm968e-s	"arm968e-s" \
	arm1020e	"arm1020e" \
	arm1020t	"arm1020t" \
	arm1022e	"arm1022e" \
	arm1026ej-s	"arm1026ej-s" \
	arm1136jf-s	"arm1136jf-s" \
	arm1136j-s	"arm1136j-s" \
	arm1156t2f-s	"arm1156t2f-s" \
	arm1156t2-s	"arm1156t2-s" \
	arm1176jzf-s	"arm1176jzf-s" \
	arm1176jz-s	"arm1176jz-s" \
	arm7100		"arm7100" \
	arm7500		"arm7500" \
	arm7500fe	"arm7500fe" \
	cortex-a5	"cortex-a5" \
	cortex-a7	"cortex-a7" \
	cortex-a8	"cortex-a8" \
	cortex-a9	"cortex-a9" \
	cortex-a15	"cortex-a15" \
	cortex-m0	"cortex-m0" \
	cortex-m1	"cortex-m1" \
	cortex-m3	"cortex-m3" \
	cortex-m4	"cortex-m4" \
	cortex-r4	"cortex-r4" \
	cortex-r4f	"cortex-r4f" \
	cortex-r5	"cortex-r5" \
	ep9312		"ep9312" \
	fa526		"fa526" \
	fa606te		"fa606te" \
	fa626		"fa626" \
	fa626te		"fa626te" \
	fa726te		"fa726te" \
	fmp626		"fmp626" \
	iwmmxt		"iwmmxt" \
	iwmmxt2		"iwmmxt2" \
	mpcore		"mpcore" \
	mpcorenovfp	"mpcorenovfp" \
	strongarm	"strongarm" \
	strongarm110	"strongarm110" \
	strongarm1100	"strongarm1100" \
	strongarm1110	"strongarm1110" \
	xscale		"xscale"

choice SDECFG_ARM_ABI aapcs-linux \
	aapcs		"EABI with variable size enums" \
	aapcs-linux	"EABI with standard Linux 32 bit (int) enums" \
	apcs-gnu	"OABI (old ABI)" \
	atpcs		"Thumb ABI" \
	iwmmxt		"Intel XScale MMX extensions"

choice SDECFG_ARM_ENDIANESS little-endian \
	little-endian	"little-endian" \
	big-endian	"big-endian"

choice SDECFG_ARM_ARCH armv5 \
	armv2		"ARMv2" \
	armv2a		"ARMv2a" \
	armv3		"ARMv3" \
	armv3m		"ARMv3m" \
	armv4		"ARMv4" \
	armv4t		"ARMv4t" \
	armv5		"ARMv5" \
	armv5t		"ARMv5t" \
	armv5e		"ARMv5e" \
	armv5te		"ARMv5te" \
	armv6		"ARMv6" \
	armv6j		"ARMv6j" \
	armv6t2		"ARMv6t2" \
	armv6z		"ARMv6z" \
	armv6zk		"ARMv6zk" \
	armv6-m		"ARMv6-m" \
	armv7		"ARMv7" \
	armv7-a		"ARMv7-a" \
	armv7-r		"ARMv7-r" \
	armv7-m		"ARMv7-m" \
	iwmmxt		"IWMMXT" \
	iwmmxt2		"IWMMXT2" \
	ep9312		"EP9312"

choice SDECFG_ARM_MODE arm \
	arm		"ARM mode" \
	thumb		"Thumb mode"

choice SDECFG_ARM_FLOAT_ABI soft \
	soft		"soft-float calling conventions" \
	softfp		"hardware floating-point instructions using soft-float calling conventions" \
	hard		"hardware floating-point instructions using FPU-specific calling conventions"

if [ $SDECFG_ARM_FLOAT_ABI == hard ]; then
	choice SDECFG_ARM_FPU neon \
		fpa		"fpa" \
		fpe2		"fpe2" \
		fpe3		"fpe3" \
		fpv4-sp-d16	"fpv4-sp-d16" \
		neon		"neon" \
		neon-fp16	"neon-fp16" \
		neon-vfpv4	"neon-vfpv4" \
		maverick	"maverick" \
		vfp		"vfp" \
		vfpv3		"vfpv3" \
		vfpv3-fp16	"vfpv3-fp16" \
		vfpv3-d16	"vfpv3-d16" \
		vfpv3-d16-fp16	"vfpv3-d16-fp16" \
		vfpv3xd		"vfpv3xd" \
		vfpv3xd-fp16	"vfpv3xd-fp16" \
		vfpv4		"vfpv4" \
		vfpv4-d16	"vfpv4-d16"
fi

bool 'Generate code using the 16bit thumb instruction set' SDECFG_ARM_THUMB 0

SDECFG_ID="$SDECFG_ID-$SDECFG_ARM_ARCH"

if [ $SDECFG_ARM_OPT != generic ] ; then
	SDECFG_ID="$SDECFG_ID-$SDECFG_ARM_OPT"
fi

