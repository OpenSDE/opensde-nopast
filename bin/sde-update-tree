#!/bin/sh
# --- SDE-COPYRIGHT-NOTE-BEGIN ---
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
#
# Filename: bin/sde-update-tree
# Copyright (C) 2007 - 2008 The OpenSDE Project
#
# More information can be found in the files COPYING and README.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License. A copy of the
# GNU General Public License can be found in the file COPYING.
# --- SDE-COPYRIGHT-NOTE-END ---

#Description: Updates the entire working tree

[ -n "$SDEROOT" ] ||
	export SDEROOT=$( cd "${0%/*}/.."; pwd -P )

. $SDEROOT/lib/libsde.in

update_usage() {
	local progname=${0##*/}
	cat <<-EOT
	Usage:	${progname//-/ }
	EOT
}

shortopts=
longopts='help'
options=$( getopt -o "$shortopts" -l "$longopts" -- "$@" )
if [ $? -ne 0 ]; then
	update_usage
	exit -1
fi

# load new arguments list
eval set -- "$options"

GITSERVER="git://git.opensde.net"

while [ $# -gt 0 ]; do
	case "$1" in
		--help)
			update_usage
			exit 0 ;;

		--)	shift; break ;;
		*)	echo_abort 1 "Unknown argument '$1', aborting."
	esac
	shift
done

indent_output() {
	sed -e '/^$/d;' -e 's/^/  /'
}

# jump to the working tree's root
#
cd "$SDEROOT"

tree="${SDEROOT##*/}"

# hunt for the roots of the sub-working trees
#
for x in . package $( ls -1d package/* target/* 2> /dev/null ); do
	if [ ! -d "$x" ]; then
		case "$x" in
			package)
				echo "$tree/$x:"
				( git clone --quiet \
					"$GITSERVER/opensde/$x-nopast.git" "$x" 2>&1 &&
					echo "$x: cloned successfully"
				) | indent_output
				;;
			*)
				echo "$tree/$x: missing" >&2
				;;
		esac
	elif [ -d "$x/.git" ]; then
		cd "$x";
		echo "$tree/$x:"
		( git fetch --quiet && git reset && git rebase origin ) 2>&1 | indent_output
		cd - > /dev/null
	elif [ -d "$x/.svn" ]; then
		cd "$x";
		echo "$tree/$x:"
		svn up 2>&1 | indent_output
		cd - > /dev/null
	fi
done
